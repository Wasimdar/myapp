{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\01-starting-project (8)\\\\01-starting-project\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeal = async () => {\n      const responce = await fetch('https://react-http-ba874-default-rtdb.firebaseio.com/meals.json');\n      if (!responce.ok) {\n        throw new Error('Something went wrong');\n      }\n      const responceData = await responce.json();\n      const loadedMeals = [];\n      for (const key in responceData) {\n        loadedMeals.push({\n          id: key,\n          name: responceData[key].name,\n          description: responceData[key].description,\n          price: responceData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    try {\n      fetchMeal();\n    } catch (error) {\n      setIsLoading(false);\n      setHttpError(error.message);\n    }\n    fetchMeal();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.MealsLoading,\n        children: \"Loading..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"NTREMz2Xtt24a5dskAOMdxNpfKU=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useEffect","useState","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeal","responce","fetch","ok","Error","responceData","json","loadedMeals","key","push","id","name","description","price","error","message","children","className","MealsLoading","fileName","_jsxFileName","lineNumber","columnNumber","mealsList","map","meal","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/01-starting-project (8)/01-starting-project/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading , setIsLoading] = useState(true);\n  const [httpError , setHttpError] = useState();\n\n   useEffect(()=>{\n    const fetchMeal = async ()=>{\n\n      const responce = await fetch(\n      'https://react-http-ba874-default-rtdb.firebaseio.com/meals.json');\n      \n      if(!responce.ok){\n        throw new Error('Something went wrong');\n      }\n      \n      const responceData = await responce.json();\n\n      const loadedMeals= [];\n      for(const key in responceData){\n        loadedMeals.push({\n          id:key,\n          name:responceData[key].name,\n          description:responceData[key].description,\n          price:responceData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);  \n    }\n    try{\n      fetchMeal();\n    }\n    catch(error){\n      setIsLoading(false);\n      setHttpError(error.message);\n    }\n      \n\n\n    fetchMeal();\n   },[]);\n\n\n   if(isLoading){\n    return(<section>\n      <p className={classes.MealsLoading} >Loading..</p>\n      </section>\n    );  \n   }\n\n   if(httpError){\n    return(\n      <section>\n      <p>{httpError}</p>\n      </section>\n    )\n   }\n\n\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}